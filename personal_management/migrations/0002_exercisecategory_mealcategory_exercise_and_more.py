# Generated by Django 5.2.7 on 2025-10-23 15:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('personal_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Exercise Category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MealCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Meal Category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('equipment', models.CharField(choices=[('bodyweight', 'Bodyweight'), ('dumbbell', 'Dumbbell'), ('barbell', 'Barbell'), ('machine', 'Machine'), ('kettlebell', 'Kettlebell'), ('band', 'Resistance Band'), ('other', 'Other')], default='bodyweight', max_length=32)),
                ('primary_muscles', models.CharField(help_text='Key muscle groups activated (comma separated).', max_length=200)),
                ('secondary_muscles', models.CharField(blank=True, help_text='Supporting muscle groups (comma separated).', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Explain the purpose or intent of this movement.')),
                ('coaching_cues', models.TextField(blank=True, help_text='Bulleted cues or reminders for proper execution.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='personal_management.exercisecategory')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'category', 'equipment')},
            },
        ),
        migrations.CreateModel(
            name='WorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('scheduled_for', models.DateField(blank=True, null=True)),
                ('focus', models.CharField(blank=True, help_text='High-level intent (e.g., Lower Body Strength, Mobility Reset).', max_length=120)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_for', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('summary', models.CharField(blank=True, help_text='Headline to describe the meal intent (e.g., High-protein breakfast).', max_length=200)),
                ('ingredients', models.TextField(blank=True, help_text='List ingredients and quantities (newline separated).')),
                ('instructions', models.TextField(blank=True)),
                ('servings', models.PositiveSmallIntegerField(default=1)),
                ('calories', models.DecimalField(blank=True, decimal_places=2, help_text='kcal per serving.', max_digits=6, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, help_text='grams per serving.', max_digits=5, null=True)),
                ('carbohydrates', models.DecimalField(blank=True, decimal_places=2, help_text='grams per serving.', max_digits=5, null=True)),
                ('fats', models.DecimalField(blank=True, decimal_places=2, help_text='grams per serving.', max_digits=5, null=True)),
                ('prep_time_minutes', models.PositiveIntegerField(blank=True, help_text='Estimated prep time per meal.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to='personal_management.mealcategory')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='SessionExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1)),
                ('sets', models.PositiveSmallIntegerField(default=3)),
                ('reps', models.CharField(default='10', help_text='Reps or time (e.g., 8-10, 45s).', max_length=40)),
                ('tempo', models.CharField(blank=True, help_text='Tempo (e.g., 3010).', max_length=40)),
                ('rest_seconds', models.PositiveIntegerField(blank=True, help_text='Rest after this exercise in seconds.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Coaching cues or progressions.')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_uses', to='personal_management.exercise')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_exercises', to='personal_management.workoutsession')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('session', 'order')},
            },
        ),
    ]
